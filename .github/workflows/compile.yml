---
name: Compile NEMO Firmware

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      board:
        description: 'Board to Compile'
        type: choice
        required: true
        default: 'M5Cardputer'
        options: ['M5Cardputer', 'M5StickCPlus2', 'M5StickCPlus', 'M5StickC']

env:
  NEMO_VERSION: ${{ contains(github.ref, 'refs/tags/') && github.ref_name || github.sha }}

jobs:
  compile_sketch:
    name: Build ${{ matrix.board.name }} (${{ matrix.locale }})
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        locale:
          - en-us
          - pt-br
        board:
          - { 
              name: "M5Cardputer",
              fqbn: "m5stack:esp32:m5stack_cardputer",
              extra_flags: "-DCARDPUTER",
              libraries: "M5Cardputer IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x0000",
              },
            }
          - {
              name: "M5StickCPlus2",
              fqbn: "m5stack:esp32:m5stack_stickc_plus2",
              extra_flags: "-DSTICK_C_PLUS2",
              libraries: "M5StickCPlus2 IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }
          - {
              name: "M5StickCPlus",
              fqbn: "m5stack:esp32:m5stack_stickc_plus",
              extra_flags: "-DSTICK_C_PLUS",
              libraries: "M5StickCPlus IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }
          - {
              name: "M5StickC",
              fqbn: "m5stack:esp32:m5stack_stickc",
              extra_flags: "-DSTICK_C",
              # TODO: M5StickC's latest version has some dependency issues with M5Hat-JoyC library
              libraries: "M5StickC@0.2.8 IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }

    steps:
      - uses: actions/checkout@v4

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install platform
        run: |
          set -x
          
          # arduino-cli core install esp32:esp32
          arduino-cli core install m5stack:esp32 --additional-urls "file:///${PWD}/package_m5stack_index.json"

          arduino-cli core search m5stack
          arduino-cli board listall

          arduino-cli lib install ${{ matrix.board.libraries }} --log-level warn --verbose
          
      - name: Install esptool
        run: |
          pip install -U esptool

      - name: Compile ${{ matrix.board.name }} Sketch
        run: |
          set -x

          locale=${{ matrix.locale }}
          language=$(echo "LANGUAGE_${locale//-/_}" | tr '[:lower:]' '[:upper:]')
          version="${NEMO_VERSION::7}"
          
          extra_flags="${{ matrix.board.extra_flags }} -DNEMO_VERSION=\"${version}\" -D${language}"

          arduino-cli compile --fqbn ${{ matrix.board.fqbn }} -e \
                              --build-property build.partitions=huge_app \
                              --build-property upload.maximum_size=3145728 \
                              --build-property compiler.cpp.extra_flags="${extra_flags}" \
                              ./m5stick-nemo.ino
      
      - name: Create ${{ matrix.board.name }} Firmware Binary
        run: |
          set -x
          
          version="${NEMO_VERSION::7}"
          
          if [[ "${locale}" == "en-us" ]]; then
            output_file="M5Nemo-${{ matrix.board.name }}-${version}.bin"
          else
            output_file="M5Nemo-${{ matrix.board.name }}-${version}.${locale}.bin"
          fi

          fqbn=${{ matrix.board.fqbn }}
          directory="${fqbn//:/.}"

          esptool.py --chip esp32s3 merge_bin --output ${output_file}  \
            ${{ matrix.board.partitions.bootloader_addr }} build/${directory}/m5stick-nemo.ino.bootloader.bin \
            0x8000 build/${directory}/m5stick-nemo.ino.partitions.bin \
            0x10000 build/${directory}/m5stick-nemo.ino.bin

      - name: List all files
        if: always()
        continue-on-error: true
        run: |
          set -x
          pwd
          ls -all
          tree

      # TODO: Validate the firmware
        
      - name: Upload ${{ matrix.board.name }} Firmware Binary
        uses: actions/upload-artifact@v4
        with:
          name: M5Nemo-${{ matrix.board.name }} - ${{ matrix.locale }}
          path: M5Nemo-*.bin
          if-no-files-found: error

  create_release:
    runs-on: ubuntu-latest
    environment: github_release
    needs: [compile_sketch]

    steps:
    - uses: actions/download-artifact@v4
      with:
        merge-multiple: true

    - name: List all files
      if: always()
      run: |
        set -x
        pwd
        ls -all
        tree

    - name: Create Release
      uses: softprops/action-gh-release@v1
      # if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        name: NEMO Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        files: |
          M5Nemo-*.bin


