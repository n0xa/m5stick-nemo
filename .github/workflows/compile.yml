---
name: Compile NEMO Firmware

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  compile_sketch:
    name: Run ${{ join(matrix.*, ' - ') }} - ${{ github.event_name }}
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 2
      fail-fast: false
      matrix:
        include:
          - NAME: M5Cardputer
            FQBN: "m5stack:esp32:m5stack_cardputer"
            BOARD: "m5stack.esp32.m5stack_cardputer"
            FLAG: CARDPUTER
            LIBRARIES: "M5Cardputer IRRemoteESP8266"
          - NAME: M5StickCPlus2
            FQBN: "m5stack:esp32:m5stack_stickc_plus2"
            BOARD: "m5stack.esp32.m5stack_stickc_plus2"
            FLAG: STICK_C_PLUS2
            LIBRARIES: "M5StickCPlus2 IRRemoteESP8266"
          - NAME: M5StickCPlus
            FQBN: "m5stack:esp32:m5stack_stickc_plus"
            BOARD: "m5stack.esp32.m5stack_stickc_plus"
            FLAG: STICK_C_PLUS
            LIBRARIES: "M5StickCPlus IRRemoteESP8266"
          - NAME: M5StickC
            FQBN: "m5stack:esp32:m5stack_stickc"
            BOARD: "m5stack.esp32.m5stack_stickc"
            FLAG: STICK_C
            LIBRARIES: "M5StickC IRRemoteESP8266 M5Hat-JoyC"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install platform
        run: |
          set -x
          # arduino-cli core install esp32:esp32
          arduino-cli core install m5stack:esp32 --additional-urls "file:///${PWD}/package_m5stack_index.json"

          arduino-cli core search m5stack
          arduino-cli board listall

          arduino-cli lib install ${{ matrix.LIBRARIES }} --log-level warn --verbose
          
      - name: Install esptool
        run: |
          set -x
          pip install -U esptool

      - name: Compile ${{ matrix.NAME }} Sketch
        run: |
          set -x
          arduino-cli compile --fqbn ${{ matrix.FQBN }} -e \
                              --build-property build.partitions=huge_app \
                              --build-property upload.maximum_size=3145728 \
                              --build-property compiler.cpp.extra_flags=-D${{ matrix.FLAG }} \
                              ./m5stick-nemo.ino
                              # --libraries M5Cardputer,IRRemoteESP8266 \
      
      - name: Create firmware
        run: |
          set -x
          # TODO: get version from buildVer

          esptool.py --chip esp32s3 merge_bin --output M5Nemo-${{ matrix.NAME }}.bin  \
            0x0000 build/${{ matrix.BOARD }}/m5stick-nemo.ino.bootloader.bin \
            0x8000 build/${{ matrix.BOARD }}/m5stick-nemo.ino.partitions.bin \
            0x10000 build/${{ matrix.BOARD }}/m5stick-nemo.ino.bin

      - name: List all files
        if: always()
        continue-on-error: true
        run: |
          set -x -e
          pwd
          ls -all
          tree

      # TODO: Validate the firmware
        
      - name: Upload ${{ matrix.NAME }} firmware
        uses: actions/upload-artifact@v4
        with:
          path: M5Nemo-${{ matrix.NAME }}.bin
          name: M5Nemo-${{ matrix.NAME }}
          if-no-files-found: error

  create_release:
    runs-on: ubuntu-latest
    environment: release
    needs: [compile_sketch]

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: M5Nemo-M5Cardputer
        merge-multiple: true

    - name: List all files
      if: always()
      run: |
        set -x -e
        echo ${{ github.ref_name }}
        pwd
        ls -all
        tree

    - name: Create Release
      uses: softprops/action-gh-release@v1
      # if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        name: NEMO Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        files: |
          M5Nemo-M5Cardputer.bin
          M5Nemo-M5StickCPlus2.bin
          M5Nemo-M5StickCPlus.bin

