---
name: Compile NEMO Firmware

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      board:
        description: 'Board to Compile'
        type: choice
        required: true
        default: 'M5Cardputer'
        options: ['M5Cardputer', 'M5StickCPlus2', 'M5StickCPlus', 'M5StickC']

jobs:
  compile_sketch:
    name: Run ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 2
      fail-fast: false
      matrix:
        # locale:
        #   - LANGUAGE_EN_US
        #   - LANGUAGE_PT_BR
        include:
          - { 
              name: "M5Cardputer",
              fqbn: "m5stack:esp32:m5stack_cardputer",
              board: "m5stack.esp32.m5stack_cardputer",
              extra_flags: "-DCARDPUTER",
              libraries: "M5Cardputer IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x0000",
              },
            }
          - {
              name: "M5StickCPlus2",
              fqbn: "m5stack:esp32:m5stack_stickc_plus2",
              board: "m5stack.esp32.m5stack_stickc_plus2",
              extra_flags: "-DSTICK_C_PLUS2",
              libraries: "M5StickCPlus2 IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }
          - {
              name: "M5StickCPlus",
              fqbn: "m5stack:esp32:m5stack_stickc_plus",
              board: "m5stack.esp32.m5stack_stickc_plus",
              extra_flags: "-DSTICK_C_PLUS",
              libraries: "M5StickCPlus IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }
          - {
              name: "M5StickC",
              fqbn: "m5stack:esp32:m5stack_stickc",
              board: "m5stack.esp32.m5stack_stickc",
              extra_flags: "-DSTICK_C",
              # TODO: M5StickC's latest version has some dependency issues with M5Hat-JoyC library
              libraries: "M5StickC@0.2.8 IRRemoteESP8266",
              partitions: {
                bootloader_addr: "0x1000",
              },
            }

    steps:
      - uses: actions/checkout@v4

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install platform
        run: |
          set -x
          # arduino-cli core install esp32:esp32
          arduino-cli core install m5stack:esp32 --additional-urls "file:///${PWD}/package_m5stack_index.json"

          arduino-cli core search m5stack
          arduino-cli board listall

          arduino-cli lib install ${{ matrix.libraries }} --log-level warn --verbose
          
      - name: Install esptool
        run: |
          set -x
          pip install -U esptool

      - name: Compile ${{ matrix.name }} Sketch
        run: |
          set -x

          # If we are building a tag, use that as the version, otherwise use the short SHA
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            version=${{ github.ref }}
          else
            version="${GITHUB_SHA::7}"
          fi
          
          extra_flags="${{ matrix.extra_flags }} -DNEMO_VERSION=${version}"

          arduino-cli compile --fqbn ${{ matrix.fqbn }} -e \
                              --build-property build.partitions=huge_app \
                              --build-property upload.maximum_size=3145728 \
                              --build-property compiler.cpp.extra_flags=extra_flags \
                              ./m5stick-nemo.ino
      
      - name: Create Firmware Binary
        run: |
          set -x

          # If we are building a tag, use that as the version, otherwise use the short SHA
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            version=${{ github.ref }}
          else
            version="${GITHUB_SHA::7}"
          fi

          esptool.py --chip esp32s3 merge_bin --output M5Nemo-${{ matrix.name }}.bin  \
            ${{ matrix.partitions.bootloader_addr }} build/${{ matrix.board }}/m5stick-nemo.ino.bootloader.bin \
            0x8000 build/${{ matrix.board }}/m5stick-nemo.ino.partitions.bin \
            0x10000 build/${{ matrix.board }}/m5stick-nemo.ino.bin

      - name: List all files
        if: always()
        continue-on-error: true
        run: |
          set -x -e
          pwd
          ls -all
          tree

      # TODO: Validate the firmware
        
      - name: Upload ${{ matrix.name }} Firmware Binary
        uses: actions/upload-artifact@v4
        with:
          path: M5Nemo-${{ matrix.name }}.bin
          name: M5Nemo-${{ matrix.name }}
          if-no-files-found: error

  create_release:
    runs-on: ubuntu-latest
    environment: release
    needs: [compile_sketch]

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: M5Nemo-M5Cardputer
        merge-multiple: true
    
    - uses: actions/download-artifact@v4
      with:
        name: M5Nemo-M5StickCPlus2
        merge-multiple: true
    
    - uses: actions/download-artifact@v4
      with:
        name: M5Nemo-M5StickCPlus
        merge-multiple: true
    
    - uses: actions/download-artifact@v4
      with:
        name: M5Nemo-M5StickC
        merge-multiple: true

    - name: List all files
      if: always()
      run: |
        set -x -e
        echo ${{ github.ref_name }}
        pwd
        ls -all
        tree

    - name: Create Release
      uses: softprops/action-gh-release@v1
      # if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      with:
        name: NEMO Release ${{ github.ref_name }}
        tag_name: ${{ github.sha }}
        files: |
          M5Nemo-M5Cardputer.bin
          M5Nemo-M5StickCPlus2.bin
          M5Nemo-M5StickCPlus.bin
          M5Nemo-M5StickC.bin

